{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shoubhik/ReactSandbox/WeatherApp/src/containers/fontcard/FrontCard.js\";\nimport React from \"react\";\nimport \"./FrontCard.css\";\nimport axios from \"axios\";\nimport Icon from \"../../assets/image_icon\";\nimport Detail from \"../../components/details/detail\";\nimport * as ac from \"../../Store/Actions\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { TextField } from \"@material-ui/core\";\n\nclass FrontCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search_value: \"\",\n      city_name: \"delhi\",\n      lat: 0,\n      long: 0,\n      country_name: \"country\",\n      icon: \"\",\n      current_timestamp: 0,\n      temperature: \"\",\n      description: \" \",\n      current_date: 10,\n      max_temp: 0,\n      sunrise: 0,\n      sunset: 0,\n      min_temp: 0,\n      feeling: 0,\n      wind_speed: 0,\n      wind_degree: 0,\n      humidity: 0,\n      cloudiness: 0,\n      feeling: 0,\n      visibility: 0,\n      pressure: 0,\n      showDetails: false,\n      shownextday: false\n    };\n\n    this.showdetailshandler = () => {\n      this.setState(previous => {\n        return {\n          showDetails: true\n        };\n      });\n    };\n\n    this.hidedetailshandler = () => {\n      this.setState({\n        showDetails: false\n      });\n    };\n\n    this.hideforecasthandler = () => {\n      this.setState({\n        shownextday: false\n      });\n    };\n\n    this.submit = () => {\n      axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\" + this.state.search_value + \"&units=metric&appid=bf73df6199bfd3a91c21add767aaaff6\").then(res => {\n        let response = res.data;\n        console.log(response);\n        this.setState({\n          api_data: response,\n          city_name: response.name,\n          icon: response.weather[0].icon,\n          temperature: response.main.temp,\n          current_date: response.dt,\n          country_name: response.sys.country,\n          visibility: response.visibility,\n          humidity: response.main.humidity,\n          pressure: response.main.pressure,\n          sunrise: response.sys.sunrise,\n          sunset: response.sys.sunset,\n          current_timestamp: response.dt,\n          max_temp: response.main.temp_max,\n          min_temp: response.main.temp_min,\n          feeling: response.main.feels_like,\n          wind_speed: response.wind.speed,\n          description: response.weather[0].description,\n          cloudiness: response.clouds.all,\n          wind_degree: response.wind.deg,\n          long: response.coord.lon,\n          lat: response.coord.lat\n        });\n        this.props.getCity(this.state.city_name);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.keyHandler = e => {\n      if (e.key === \"Enter\") {\n        this.submit();\n      }\n    };\n\n    this.search_handler = event => {\n      this.setState({\n        search_value: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=delhi&units=metric&appid=bf73df6199bfd3a91c21add767aaaff6\").then(res => {\n      let response = res.data;\n      this.setState({\n        api_data: response,\n        city_name: response.name,\n        icon: response.weather[0].icon,\n        temperature: response.main.temp,\n        current_date: response.dt,\n        country_name: response.sys.country,\n        visibility: response.visibility,\n        humidity: response.main.humidity,\n        pressure: response.main.pressure,\n        sunrise: response.sys.sunrise,\n        sunset: response.sys.sunset,\n        current_timestamp: response.dt,\n        max_temp: response.main.temp_max,\n        min_temp: response.main.temp_min,\n        feeling: response.main.feels_like,\n        wind_speed: response.wind.speed,\n        description: response.weather[0].description,\n        cloudiness: response.clouds.all,\n        wind_degree: response.wind.deg,\n        long: response.coord.lon,\n        lat: response.coord.lat\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    console.log(\"render in front card called\", this.state.city_name);\n    let arr = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let d = new Date(this.state.current_timestamp * 1000).getDay();\n    console.log(new Date(this.state.current_timestamp * 1000).toLocaleTimeString());\n    let day = arr[d];\n    let montharray = [\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n    let month = montharray[new Date(this.state.current_timestamp * 1000).getMonth()];\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container  mt-5 mb-0 px-0 frontcard \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" row container pr-4 m-0 mb-2  justify-content-end \",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              backgroundColor: \"ghostwhite\"\n            },\n            onKeyDown: this.keyHandler,\n            className: \" offset col-l-3 border border-primary\",\n            onChange: this.search_handler,\n            placeholder: \"Enter city\",\n            value: this.state.search_value,\n            id: \"standard-basic\",\n            label: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.submit,\n            className: \" col-l-1 m-0 p-0 btn btn-info border border-dark\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container p-0 m-0  \",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row p-0 m-0 \",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col m-0 pl-3 left_side \",\n              children: [/*#__PURE__*/_jsxDEV(\"h\", {\n                className: \" m-0 p-0 h1 city\",\n                children: this.state.city_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"pl-5 h6\",\n                children: this.state.country_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row p-0  m-0  \",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col h4 m-0 mt-3 p-0 text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    children: day\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row m-0 mt-2 p-0 \",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col m-0 p-0   text-center date\",\n                  children: [new Date(this.state.sunrise * 1000).getDate(), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\" \", month]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row m-0 mt-2 p-0 \",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col  m-0 p-0 leftparameter\",\n                  children: \"Visibility: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col m-0 p-1 leftvalue\",\n                  children: [\" \", this.state.visibility]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row m-0 mt-2 p-0 \",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col m-0 p-0 leftparameter\",\n                  children: \"Humidity:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col m-0 p-0 leftvalue\",\n                  children: this.state.humidity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row m-0 mt-2 p-0  \",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col m-0 p-0 leftparameter\",\n                  children: \"Pressure:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col m-0 p-0  leftvalue\",\n                  children: this.state.pressure\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/forecast\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \" btn m-0  mt-5 ml-2 mb-2 more btn-success\",\n                  children: \"5 Days Forecast\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col m-0 p-0  right_side\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"h1 m-0 p-0 temperature\",\n                children: [this.state.temperature, \" \\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Icon, {\n                url: this.state.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row m-0 mt-3 p-0  text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col m-0 p-0 description\",\n                  children: this.state.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row m-0 mt-2 p-0 \",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col m-0 p-0 rightparameter\",\n                  children: \"Sunrise:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col m-0 p-0 leftvalue\",\n                  children: [new Date(this.state.sunrise * 1000).getHours(), \":00 am\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row m-0 mt-2  p-0 \",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col m-0 p-0 rightparameter\",\n                  children: \"Sunset:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col m-0 p-0 rightvalue\",\n                  children: [new Date(this.state.sunset * 1000).getHours(), \":00 pm\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex  mt-5 justify-content-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: this.showdetailshandler,\n                  className: \" btn btn-success more \",\n                  children: \"Detailed Info\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Detail, {\n        details: this.state,\n        show: this.state.showDetails,\n        showhandler: this.hidedetailshandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCity: name => {\n      console.log(\"dispataching\", name);\n      return dispatch(ac.getCityName(name));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(FrontCard);","map":{"version":3,"sources":["/home/shoubhik/ReactSandbox/WeatherApp/src/containers/fontcard/FrontCard.js"],"names":["React","axios","Icon","Detail","ac","connect","Link","TextField","FrontCard","Component","state","search_value","city_name","lat","long","country_name","icon","current_timestamp","temperature","description","current_date","max_temp","sunrise","sunset","min_temp","feeling","wind_speed","wind_degree","humidity","cloudiness","visibility","pressure","showDetails","shownextday","showdetailshandler","setState","previous","hidedetailshandler","hideforecasthandler","submit","get","then","res","response","data","console","log","api_data","name","weather","main","temp","dt","sys","country","temp_max","temp_min","feels_like","wind","speed","clouds","all","deg","coord","lon","props","getCity","catch","error","keyHandler","e","key","search_handler","event","target","value","componentDidMount","render","arr","d","Date","getDay","toLocaleTimeString","day","montharray","month","getMonth","backgroundColor","getDate","getHours","mapDispatchToProps","dispatch","getCityName"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./FrontCard.css\";\r\nimport axios from \"axios\";\r\nimport Icon from \"../../assets/image_icon\";\r\nimport Detail from \"../../components/details/detail\";\r\nimport * as ac from \"../../Store/Actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nclass FrontCard extends React.Component {\r\n  state = {\r\n    search_value: \"\",\r\n    city_name: \"delhi\",\r\n    lat: 0,\r\n    long: 0,\r\n    country_name: \"country\",\r\n    icon: \"\",\r\n    current_timestamp: 0,\r\n    temperature: \"\",\r\n    description: \" \",\r\n    current_date: 10,\r\n    max_temp: 0,\r\n    sunrise: 0,\r\n    sunset: 0,\r\n    min_temp: 0,\r\n    feeling: 0,\r\n    wind_speed: 0,\r\n    wind_degree: 0,\r\n    humidity: 0,\r\n    cloudiness: 0,\r\n    feeling: 0,\r\n    visibility: 0,\r\n    pressure: 0,\r\n\r\n    showDetails: false,\r\n    shownextday: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        \"https://api.openweathermap.org/data/2.5/weather?q=delhi&units=metric&appid=bf73df6199bfd3a91c21add767aaaff6\"\r\n      )\r\n      .then((res) => {\r\n        let response = res.data;\r\n\r\n        this.setState({\r\n          api_data: response,\r\n          city_name: response.name,\r\n          icon: response.weather[0].icon,\r\n          temperature: response.main.temp,\r\n          current_date: response.dt,\r\n          country_name: response.sys.country,\r\n          visibility: response.visibility,\r\n          humidity: response.main.humidity,\r\n          pressure: response.main.pressure,\r\n          sunrise: response.sys.sunrise,\r\n          sunset: response.sys.sunset,\r\n          current_timestamp: response.dt,\r\n          max_temp: response.main.temp_max,\r\n          min_temp: response.main.temp_min,\r\n          feeling: response.main.feels_like,\r\n          wind_speed: response.wind.speed,\r\n          description: response.weather[0].description,\r\n          cloudiness: response.clouds.all,\r\n          wind_degree: response.wind.deg,\r\n          long: response.coord.lon,\r\n          lat: response.coord.lat,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  showdetailshandler = () => {\r\n    this.setState((previous) => {\r\n      return {\r\n        showDetails: true,\r\n      };\r\n    });\r\n  };\r\n  // showForecastHandler=()=>{\r\n  //    this.props.getCity(this.state.city_name)\r\n\r\n  // }\r\n  hidedetailshandler = () => {\r\n    this.setState({ showDetails: false });\r\n  };\r\n  hideforecasthandler = () => {\r\n    this.setState({ shownextday: false });\r\n  };\r\n\r\n  submit = () => {\r\n    axios\r\n      .get(\r\n        \"https://api.openweathermap.org/data/2.5/weather?q=\" +\r\n          this.state.search_value +\r\n          \"&units=metric&appid=bf73df6199bfd3a91c21add767aaaff6\"\r\n      )\r\n      .then((res) => {\r\n        let response = res.data;\r\n\r\n        console.log(response);\r\n        this.setState({\r\n          api_data: response,\r\n          city_name: response.name,\r\n          icon: response.weather[0].icon,\r\n          temperature: response.main.temp,\r\n          current_date: response.dt,\r\n          country_name: response.sys.country,\r\n          visibility: response.visibility,\r\n          humidity: response.main.humidity,\r\n          pressure: response.main.pressure,\r\n          sunrise: response.sys.sunrise,\r\n          sunset: response.sys.sunset,\r\n          current_timestamp: response.dt,\r\n          max_temp: response.main.temp_max,\r\n          min_temp: response.main.temp_min,\r\n          feeling: response.main.feels_like,\r\n          wind_speed: response.wind.speed,\r\n          description: response.weather[0].description,\r\n          cloudiness: response.clouds.all,\r\n          wind_degree: response.wind.deg,\r\n          long: response.coord.lon,\r\n          lat: response.coord.lat,\r\n        });\r\n        this.props.getCity(this.state.city_name);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  keyHandler = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      this.submit();\r\n    }\r\n  };\r\n\r\n  search_handler = (event) => {\r\n    this.setState({ search_value: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"render in front card called\", this.state.city_name);\r\n    let arr = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ];\r\n    let d = new Date(this.state.current_timestamp * 1000).getDay();\r\n    console.log(\r\n      new Date(this.state.current_timestamp * 1000).toLocaleTimeString()\r\n    );\r\n    let day = arr[d];\r\n    let montharray = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"Aug\",\r\n      \"Sept\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    let month =\r\n      montharray[new Date(this.state.current_timestamp * 1000).getMonth()];\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container  mt-5 mb-0 px-0 frontcard \">\r\n          <div className=\" row container pr-4 m-0 mb-2  justify-content-end \">\r\n            <TextField\r\n              style={{ backgroundColor: \"ghostwhite\" }}\r\n              onKeyDown={this.keyHandler}\r\n              className=\" offset col-l-3 border border-primary\"\r\n              onChange={this.search_handler}\r\n              placeholder=\"Enter city\"\r\n              value={this.state.search_value}\r\n              id=\"standard-basic\"\r\n              label=\"City\"\r\n            />\r\n\r\n            <button\r\n              onClick={this.submit}\r\n              className=\" col-l-1 m-0 p-0 btn btn-info border border-dark\"\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"container p-0 m-0  \">\r\n            <div className=\"row p-0 m-0 \">\r\n              <div className=\"col m-0 pl-3 left_side \">\r\n                <h className=\" m-0 p-0 h1 city\">{this.state.city_name}</h>\r\n                <p className=\"pl-5 h6\">{this.state.country_name}</p>\r\n                <div className=\"row p-0  m-0  \">\r\n                  <div className=\"col h4 m-0 mt-3 p-0 text-center\">\r\n                    <i>{day}</i>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row m-0 mt-2 p-0 \">\r\n                  <div className=\"col m-0 p-0   text-center date\">\r\n                    {new Date(this.state.sunrise * 1000).getDate()}\r\n                    <span> {month}</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row m-0 mt-2 p-0 \">\r\n                  <div className=\"col  m-0 p-0 leftparameter\">Visibility: </div>\r\n                  <div className=\"col m-0 p-1 leftvalue\">\r\n                    {\" \"}\r\n                    {this.state.visibility}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row m-0 mt-2 p-0 \">\r\n                  <div className=\"col m-0 p-0 leftparameter\">Humidity:</div>\r\n                  <div className=\"col m-0 p-0 leftvalue\">\r\n                    {this.state.humidity}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row m-0 mt-2 p-0  \">\r\n                  <div className=\"col m-0 p-0 leftparameter\">Pressure:</div>\r\n                  <div className=\"col m-0 p-0  leftvalue\">\r\n                    {this.state.pressure}\r\n                  </div>\r\n                </div>\r\n                <Link to=\"/forecast\">\r\n                  {\" \"}\r\n                  <p className=\" btn m-0  mt-5 ml-2 mb-2 more btn-success\">\r\n                    5 Days Forecast\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n\r\n              <div className=\"col m-0 p-0  right_side\">\r\n                <p className=\"h1 m-0 p-0 temperature\">\r\n                  {this.state.temperature} &#176;C\r\n                </p>\r\n                <Icon url={this.state.icon}></Icon>\r\n                <div className=\"row m-0 mt-3 p-0  text-center\">\r\n                  <div className=\"col m-0 p-0 description\">\r\n                    {this.state.description}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row m-0 mt-2 p-0 \">\r\n                  <div className=\"col m-0 p-0 rightparameter\">Sunrise:</div>\r\n                  <div className=\"col m-0 p-0 leftvalue\">\r\n                    {new Date(this.state.sunrise * 1000).getHours()}:00 am\r\n                  </div>\r\n                </div>\r\n                <div className=\"row m-0 mt-2  p-0 \">\r\n                  <div className=\"col m-0 p-0 rightparameter\">Sunset:</div>\r\n                  <div className=\"col m-0 p-0 rightvalue\">\r\n                    {new Date(this.state.sunset * 1000).getHours()}:00 pm\r\n                  </div>\r\n                </div>\r\n                <div className=\"d-flex  mt-5 justify-content-center\">\r\n                  <div\r\n                    onClick={this.showdetailshandler}\r\n                    className=\" btn btn-success more \"\r\n                  >\r\n                    Detailed Info\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Detail\r\n          details={this.state}\r\n          show={this.state.showDetails}\r\n          showhandler={this.hidedetailshandler}\r\n        ></Detail>\r\n        {/* <Coming show={this.state.shownextday} hide={this.hideforecasthandler}></Coming> */}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getCity: (name) => {\r\n      console.log(\"dispataching\", name);\r\n      return dispatch(ac.getCityName(name));\r\n    },\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(FrontCard);\r\n"]},"metadata":{},"sourceType":"module"}